worker_processes  1;

events {
    worker_connections  1024;
}

http {

    lua_package_path "${prefix}?.lua;${prefix}?/init.lua;${prefix}lua/?.lua;${prefix}lua/?/init.lua;${prefix}../lua_modules/lua/?.lua;${prefix}../lua_modules/lua/?/init.lua;;";
    lua_package_cpath "${prefix}clib/?.dll;${prefix}clib/?/?.dll;${prefix}?.dll;${prefix}clib/?.so;${prefix}clib/?/?.so;${prefix}?.so;${prefix}../lua_modules/clib/?.dll;${prefix}../lua_modules/clib/?/?.dll;${prefix}../lua_modules/clib/?.so;${prefix}../lua_modules/clib/?/?.so;;";

    client_body_temp_path      	 	temp/client_body_temp;
    fastcgi_temp_path           	temp/fastcgi_temp;
    proxy_temp_path             	temp/proxy_temp;
    scgi_temp_path              	temp/scgi_temp;
    uwsgi_temp_path             	temp/uwsgi_temp;

    server {
        listen       80;
        server_name  localhost;
        location / {
            content_by_lua_block {

                ngx.say ""
                ngx.say "Hello, OpenResty!"
                ngx.say ""
                ngx.say "------------------------------------------"
                ngx.say ""

                local function load_lib(lib_name)
                    local pok, lib = pcall(require, lib_name)
                    if pok then
                        ngx.say(lib_name, ": ", lib._VERSION or "ok")
                    else
                        ngx.say(lib_name, ": ", lib)
                    end
                end

                load_lib("lfs")
                load_lib("socket")
                load_lib("utf8")
                load_lib("hashids")

                ngx.say ""
                ngx.say "------------------------------------------"
                ngx.say ""
                ngx.say ( "ngx.config.subsystem          ", ngx.config.subsystem			)
                ngx.say ( "ngx.config.debug              ", ngx.config.debug				)
                ngx.say ( "ngx.config.prefix()           ", ngx.config.prefix()				)
                ngx.say ( "ngx.config.nginx_version      ", ngx.config.nginx_version		)
                ngx.say ( "ngx.config.ngx_lua_version    ", ngx.config.ngx_lua_version		)
                ngx.say ( "ngx.config.nginx_configure()  ", ngx.config.nginx_configure()	)
                ngx.say ""
                ngx.say "------------------------------------------"
                ngx.say ""
                ngx.say("package.path: ", package.path)
                ngx.say ""
                ngx.say "------------------------------------------"
                ngx.say ""
                ngx.say("package.cpath: ", package.cpath)
                ngx.say ""

            }
        }
    }
}
